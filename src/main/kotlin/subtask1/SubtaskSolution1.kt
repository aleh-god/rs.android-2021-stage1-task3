package subtask1

fun main(args: Array<String>) {

    // Число сочетаний из 20 по 10 = 184756
    // val bin = binomi(20, 10)
    // println("Число сочетаний из 20 по 10 = $bin")

    var result: Int? = 0
    result = checkChooseFromArray(arrayOf(6, 4))
    println("ответ 2 = $result")
    result = checkChooseFromArray(arrayOf(4, 4))
    println("ответ 1 = $result")
    // Что там за формула магическая которая из (184756, 20) дает ответ 10
    result = checkChooseFromArray(arrayOf(184756, 20))
    println("ответ 10 = $result")
    result = checkChooseFromArray(arrayOf(4, 2))
    println("ответ null = $result")
}

fun checkChooseFromArray(array: Array<Int>): Int? {
    var count = 0
    var resultN = 0

    fun binomi(n: Int, k: Int): Int {

        return if ((n == k) || (k == 0))
            1
        else
            binomi(n - 1, k) + binomi(n - 1, k - 1)
    }

    // Число сочетаний из 20 по !узнать! = 184756
    while (resultN < array[0]) {
        ++count
        resultN = binomi(array[1], count)
        println("Число сочетаний из ${array[1]} по ${count} = $resultN")
        if (resultN == 1) return null
    }

    resultN = count

    return resultN!!
}



/*

Комбинатор
Вы знаете комбинации: например, если вы возьмете 5 карт из колоды из 52 карт, у вас будет 2 598 960 различных комбинаций.

В математике количество комбинаций x, которые вы можете взять из набора из n элементов, называется биномиальным коэффициентом n и x, или чаще n выбирает x.

ПОДСКАЗКА: одна из формул (для m = n выберите x) из комбинаторики может помочь вам с решением.

Вы известный дизайнер плакатов и художник. Вас просят предоставить 6 плакатов одинакового дизайна в двух цветах.
Плакаты должны иметь разную цветовую комбинацию, и у вас есть выбор из 4 цветов: красный, синий, желтый, зеленый.
Сколько цветов вы можете выбрать для каждого плаката?

Ответ - два, поскольку 4 выбирают 2 = 6. Комбинации будут следующими: {красный, синий}, {красный, желтый}, {красный, зеленый}, {синий, желтый}, {синий, зеленый}, {желтый, зеленый }.

Теперь тот же вопрос, но у вас есть 35 плакатов и 7 доступных цветов. Сколько цветов у каждого плаката?
Если вы возьмете комбинацию 7, выберите 2, вы получите 21 по приведенной выше формуле.
Но 21 схемы недостаточно для 35 плакатов.
Если вы возьмете 7 и выберете 5 комбинаций, вы также получите 21. К счастью, если вы возьмете 7, выберите 3 или 7,
выберите 4 комбинации, вы получите 35, и поэтому каждый плакат будет иметь различную комбинацию из 3 или 5 цветов.
Вы возьмете 3 цвета, потому что это дешевле.

Следовательно, проблема заключается в следующем:

зная m (количество плакатов для разработки), зная n (общее количество доступных цветов), давайте найдем x
(количество цветов для каждого плаката, чтобы каждый плакат имел уникальную комбинацию цветов,
 а количество комбинаций было точно таким же как количество плакатов).
 Другими словами, вы должны создать функцию, которая принимает m (Int) и n (Int) и возвращает x (Int).
 Еще несколько условий: m> = 0 и n> 0. Если много x решений, дайте как результат наименьшее x.
 Может случиться так, что когда m задано случайным образом, нет x, удовлетворяющего уравнению (1), тогда верните null.

Вот примеры:

[6, 4] вернет 2

[4, 4] вернет 1

[4, 2] вернет null

 */